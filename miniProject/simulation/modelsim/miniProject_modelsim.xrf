vendor_name = ModelSim
source_file = 1, D:/LogicDesign/miniProject/top_interface.v
source_file = 1, D:/LogicDesign/miniProject/tb.v
source_file = 1, D:/LogicDesign/miniProject/separate.v
source_file = 1, D:/LogicDesign/miniProject/second_tb.v
source_file = 1, D:/LogicDesign/miniProject/second_counter.v
source_file = 1, D:/LogicDesign/miniProject/minute_counter.v
source_file = 1, D:/LogicDesign/miniProject/led7_decoder.v
source_file = 1, D:/LogicDesign/miniProject/clock_divider.v
source_file = 1, D:/LogicDesign/miniProject/clock_counter.v
source_file = 1, D:/LogicDesign/miniProject/hour_counter.v
source_file = 1, D:/LogicDesign/miniProject/test_interface.v
source_file = 1, D:/LogicDesign/miniProject/db/miniProject.cbx.xml
design_name = test_interface
instance = comp, \LEDR[0]~output , LEDR[0]~output, test_interface, 1
instance = comp, \LEDR[1]~output , LEDR[1]~output, test_interface, 1
instance = comp, \LEDR[2]~output , LEDR[2]~output, test_interface, 1
instance = comp, \LEDR[3]~output , LEDR[3]~output, test_interface, 1
instance = comp, \LEDR[4]~output , LEDR[4]~output, test_interface, 1
instance = comp, \LEDR[5]~output , LEDR[5]~output, test_interface, 1
instance = comp, \LEDR[6]~output , LEDR[6]~output, test_interface, 1
instance = comp, \LEDR[7]~output , LEDR[7]~output, test_interface, 1
instance = comp, \LEDR[8]~output , LEDR[8]~output, test_interface, 1
instance = comp, \LEDR[9]~output , LEDR[9]~output, test_interface, 1
instance = comp, \LEDR[10]~output , LEDR[10]~output, test_interface, 1
instance = comp, \LEDR[11]~output , LEDR[11]~output, test_interface, 1
instance = comp, \LEDR[12]~output , LEDR[12]~output, test_interface, 1
instance = comp, \LEDR[13]~output , LEDR[13]~output, test_interface, 1
instance = comp, \LEDR[14]~output , LEDR[14]~output, test_interface, 1
instance = comp, \LEDR[15]~output , LEDR[15]~output, test_interface, 1
instance = comp, \LEDR[16]~output , LEDR[16]~output, test_interface, 1
instance = comp, \LEDR[17]~output , LEDR[17]~output, test_interface, 1
instance = comp, \HEX0[0]~output , HEX0[0]~output, test_interface, 1
instance = comp, \HEX0[1]~output , HEX0[1]~output, test_interface, 1
instance = comp, \HEX0[2]~output , HEX0[2]~output, test_interface, 1
instance = comp, \HEX0[3]~output , HEX0[3]~output, test_interface, 1
instance = comp, \HEX0[4]~output , HEX0[4]~output, test_interface, 1
instance = comp, \HEX0[5]~output , HEX0[5]~output, test_interface, 1
instance = comp, \HEX0[6]~output , HEX0[6]~output, test_interface, 1
instance = comp, \HEX2[0]~output , HEX2[0]~output, test_interface, 1
instance = comp, \HEX2[1]~output , HEX2[1]~output, test_interface, 1
instance = comp, \HEX2[2]~output , HEX2[2]~output, test_interface, 1
instance = comp, \HEX2[3]~output , HEX2[3]~output, test_interface, 1
instance = comp, \HEX2[4]~output , HEX2[4]~output, test_interface, 1
instance = comp, \HEX2[5]~output , HEX2[5]~output, test_interface, 1
instance = comp, \HEX2[6]~output , HEX2[6]~output, test_interface, 1
instance = comp, \HEX3[0]~output , HEX3[0]~output, test_interface, 1
instance = comp, \HEX3[1]~output , HEX3[1]~output, test_interface, 1
instance = comp, \HEX3[2]~output , HEX3[2]~output, test_interface, 1
instance = comp, \HEX3[3]~output , HEX3[3]~output, test_interface, 1
instance = comp, \HEX3[4]~output , HEX3[4]~output, test_interface, 1
instance = comp, \HEX3[5]~output , HEX3[5]~output, test_interface, 1
instance = comp, \HEX3[6]~output , HEX3[6]~output, test_interface, 1
instance = comp, \HEX4[0]~output , HEX4[0]~output, test_interface, 1
instance = comp, \HEX4[1]~output , HEX4[1]~output, test_interface, 1
instance = comp, \HEX4[2]~output , HEX4[2]~output, test_interface, 1
instance = comp, \HEX4[3]~output , HEX4[3]~output, test_interface, 1
instance = comp, \HEX4[4]~output , HEX4[4]~output, test_interface, 1
instance = comp, \HEX4[5]~output , HEX4[5]~output, test_interface, 1
instance = comp, \HEX4[6]~output , HEX4[6]~output, test_interface, 1
instance = comp, \HEX5[0]~output , HEX5[0]~output, test_interface, 1
instance = comp, \HEX5[1]~output , HEX5[1]~output, test_interface, 1
instance = comp, \HEX5[2]~output , HEX5[2]~output, test_interface, 1
instance = comp, \HEX5[3]~output , HEX5[3]~output, test_interface, 1
instance = comp, \HEX5[4]~output , HEX5[4]~output, test_interface, 1
instance = comp, \HEX5[5]~output , HEX5[5]~output, test_interface, 1
instance = comp, \HEX5[6]~output , HEX5[6]~output, test_interface, 1
instance = comp, \HEX6[0]~output , HEX6[0]~output, test_interface, 1
instance = comp, \HEX6[1]~output , HEX6[1]~output, test_interface, 1
instance = comp, \HEX6[2]~output , HEX6[2]~output, test_interface, 1
instance = comp, \HEX6[3]~output , HEX6[3]~output, test_interface, 1
instance = comp, \HEX6[4]~output , HEX6[4]~output, test_interface, 1
instance = comp, \HEX6[5]~output , HEX6[5]~output, test_interface, 1
instance = comp, \HEX6[6]~output , HEX6[6]~output, test_interface, 1
instance = comp, \HEX7[0]~output , HEX7[0]~output, test_interface, 1
instance = comp, \HEX7[1]~output , HEX7[1]~output, test_interface, 1
instance = comp, \HEX7[2]~output , HEX7[2]~output, test_interface, 1
instance = comp, \HEX7[3]~output , HEX7[3]~output, test_interface, 1
instance = comp, \HEX7[4]~output , HEX7[4]~output, test_interface, 1
instance = comp, \HEX7[5]~output , HEX7[5]~output, test_interface, 1
instance = comp, \HEX7[6]~output , HEX7[6]~output, test_interface, 1
instance = comp, \KEY[0]~input , KEY[0]~input, test_interface, 1
instance = comp, \comb_3|count[0]~3 , comb_3|count[0]~3, test_interface, 1
instance = comp, \comb_3|count[0] , comb_3|count[0], test_interface, 1
instance = comp, \comb_3|count[1]~0 , comb_3|count[1]~0, test_interface, 1
instance = comp, \comb_3|count[1] , comb_3|count[1], test_interface, 1
instance = comp, \comb_3|count[3]~2 , comb_3|count[3]~2, test_interface, 1
instance = comp, \comb_3|count[3] , comb_3|count[3], test_interface, 1
instance = comp, \comb_3|count~1 , comb_3|count~1, test_interface, 1
instance = comp, \comb_3|count[2] , comb_3|count[2], test_interface, 1
instance = comp, \comb_3|u3|WideOr6~0 , comb_3|u3|WideOr6~0, test_interface, 1
instance = comp, \comb_3|u3|WideOr5~0 , comb_3|u3|WideOr5~0, test_interface, 1
instance = comp, \comb_3|u3|WideOr4~0 , comb_3|u3|WideOr4~0, test_interface, 1
instance = comp, \comb_3|u3|WideOr3~0 , comb_3|u3|WideOr3~0, test_interface, 1
instance = comp, \comb_3|u3|WideOr2~0 , comb_3|u3|WideOr2~0, test_interface, 1
instance = comp, \comb_3|u3|WideOr1~0 , comb_3|u3|WideOr1~0, test_interface, 1
instance = comp, \comb_3|u3|WideOr0~0 , comb_3|u3|WideOr0~0, test_interface, 1
instance = comp, \CLOCK_50~input , CLOCK_50~input, test_interface, 1
instance = comp, \CLOCK_50~inputclkctrl , CLOCK_50~inputclkctrl, test_interface, 1
instance = comp, \comb_3|u0|count_s[0]~6 , comb_3|u0|count_s[0]~6, test_interface, 1
instance = comp, \comb_3|u0|count_s[0]~feeder , comb_3|u0|count_s[0]~feeder, test_interface, 1
instance = comp, \comb_3|u0|Add0~0 , comb_3|u0|Add0~0, test_interface, 1
instance = comp, \comb_3|u3|Decoder0~1 , comb_3|u3|Decoder0~1, test_interface, 1
instance = comp, \comb_3|u3|Decoder0~1clkctrl , comb_3|u3|Decoder0~1clkctrl, test_interface, 1
instance = comp, \comb_3|u3|Decoder0~0 , comb_3|u3|Decoder0~0, test_interface, 1
instance = comp, \comb_3|mode , comb_3|mode, test_interface, 1
instance = comp, \comb_3|u0|count_s[2]~8 , comb_3|u0|count_s[2]~8, test_interface, 1
instance = comp, \comb_3|u0|a1|LessThan2~0 , comb_3|u0|a1|LessThan2~0, test_interface, 1
instance = comp, \KEY[2]~input , KEY[2]~input, test_interface, 1
instance = comp, \comb_3|u0|esub~0 , comb_3|u0|esub~0, test_interface, 1
instance = comp, \comb_3|u3|Decoder0~2 , comb_3|u3|Decoder0~2, test_interface, 1
instance = comp, \comb_3|ss , comb_3|ss, test_interface, 1
instance = comp, \comb_3|u0|eadd~0 , comb_3|u0|eadd~0, test_interface, 1
instance = comp, \comb_3|u0|esub , comb_3|u0|esub, test_interface, 1
instance = comp, \comb_3|u0|count_s[2]~9 , comb_3|u0|count_s[2]~9, test_interface, 1
instance = comp, \comb_3|u0|count_s[2]~10 , comb_3|u0|count_s[2]~10, test_interface, 1
instance = comp, \KEY[1]~input , KEY[1]~input, test_interface, 1
instance = comp, \comb_3|u0|eadd~1 , comb_3|u0|eadd~1, test_interface, 1
instance = comp, \comb_3|u0|eadd , comb_3|u0|eadd, test_interface, 1
instance = comp, \comb_3|u0|count_s[2]~11 , comb_3|u0|count_s[2]~11, test_interface, 1
instance = comp, \comb_3|u0|Add2~0 , comb_3|u0|Add2~0, test_interface, 1
instance = comp, \comb_3|u0|count_50[0] , comb_3|u0|count_50[0], test_interface, 1
instance = comp, \comb_3|u0|Add2~2 , comb_3|u0|Add2~2, test_interface, 1
instance = comp, \comb_3|u0|count_50[1] , comb_3|u0|count_50[1], test_interface, 1
instance = comp, \comb_3|u0|Add2~4 , comb_3|u0|Add2~4, test_interface, 1
instance = comp, \comb_3|u0|count_50[2] , comb_3|u0|count_50[2], test_interface, 1
instance = comp, \comb_3|u0|Add2~6 , comb_3|u0|Add2~6, test_interface, 1
instance = comp, \comb_3|u0|count_50[3] , comb_3|u0|count_50[3], test_interface, 1
instance = comp, \comb_3|u0|Add2~8 , comb_3|u0|Add2~8, test_interface, 1
instance = comp, \comb_3|u0|count_50[4] , comb_3|u0|count_50[4], test_interface, 1
instance = comp, \comb_3|u0|Add2~10 , comb_3|u0|Add2~10, test_interface, 1
instance = comp, \comb_3|u0|count_50[5] , comb_3|u0|count_50[5], test_interface, 1
instance = comp, \comb_3|u0|Add2~12 , comb_3|u0|Add2~12, test_interface, 1
instance = comp, \comb_3|u0|count_50[6] , comb_3|u0|count_50[6], test_interface, 1
instance = comp, \comb_3|u0|Add2~14 , comb_3|u0|Add2~14, test_interface, 1
instance = comp, \comb_3|u0|count_50~0 , comb_3|u0|count_50~0, test_interface, 1
instance = comp, \comb_3|u0|count_50[7] , comb_3|u0|count_50[7], test_interface, 1
instance = comp, \comb_3|u0|Add2~16 , comb_3|u0|Add2~16, test_interface, 1
instance = comp, \comb_3|u0|count_50[8] , comb_3|u0|count_50[8], test_interface, 1
instance = comp, \comb_3|u0|Add2~18 , comb_3|u0|Add2~18, test_interface, 1
instance = comp, \comb_3|u0|count_50[9] , comb_3|u0|count_50[9], test_interface, 1
instance = comp, \comb_3|u0|Add2~20 , comb_3|u0|Add2~20, test_interface, 1
instance = comp, \comb_3|u0|count_50[10] , comb_3|u0|count_50[10], test_interface, 1
instance = comp, \comb_3|u0|Add2~22 , comb_3|u0|Add2~22, test_interface, 1
instance = comp, \comb_3|u0|count_50[11] , comb_3|u0|count_50[11], test_interface, 1
instance = comp, \comb_3|u0|Add2~24 , comb_3|u0|Add2~24, test_interface, 1
instance = comp, \comb_3|u0|count_50~1 , comb_3|u0|count_50~1, test_interface, 1
instance = comp, \comb_3|u0|count_50[12] , comb_3|u0|count_50[12], test_interface, 1
instance = comp, \comb_3|u0|Add2~26 , comb_3|u0|Add2~26, test_interface, 1
instance = comp, \comb_3|u0|count_50~2 , comb_3|u0|count_50~2, test_interface, 1
instance = comp, \comb_3|u0|count_50[13] , comb_3|u0|count_50[13], test_interface, 1
instance = comp, \comb_3|u0|Add2~28 , comb_3|u0|Add2~28, test_interface, 1
instance = comp, \comb_3|u0|count_50~3 , comb_3|u0|count_50~3, test_interface, 1
instance = comp, \comb_3|u0|count_50[14] , comb_3|u0|count_50[14], test_interface, 1
instance = comp, \comb_3|u0|Add2~30 , comb_3|u0|Add2~30, test_interface, 1
instance = comp, \comb_3|u0|count_50~4 , comb_3|u0|count_50~4, test_interface, 1
instance = comp, \comb_3|u0|count_50[15] , comb_3|u0|count_50[15], test_interface, 1
instance = comp, \comb_3|u0|Add2~32 , comb_3|u0|Add2~32, test_interface, 1
instance = comp, \comb_3|u0|count_50[16] , comb_3|u0|count_50[16], test_interface, 1
instance = comp, \comb_3|u0|Add2~34 , comb_3|u0|Add2~34, test_interface, 1
instance = comp, \comb_3|u0|count_50~5 , comb_3|u0|count_50~5, test_interface, 1
instance = comp, \comb_3|u0|count_50[17] , comb_3|u0|count_50[17], test_interface, 1
instance = comp, \comb_3|u0|Add2~36 , comb_3|u0|Add2~36, test_interface, 1
instance = comp, \comb_3|u0|count_50[18] , comb_3|u0|count_50[18], test_interface, 1
instance = comp, \comb_3|u0|Add2~38 , comb_3|u0|Add2~38, test_interface, 1
instance = comp, \comb_3|u0|count_50~6 , comb_3|u0|count_50~6, test_interface, 1
instance = comp, \comb_3|u0|count_50[19] , comb_3|u0|count_50[19], test_interface, 1
instance = comp, \comb_3|u0|Add2~40 , comb_3|u0|Add2~40, test_interface, 1
instance = comp, \comb_3|u0|count_50~7 , comb_3|u0|count_50~7, test_interface, 1
instance = comp, \comb_3|u0|count_50[20] , comb_3|u0|count_50[20], test_interface, 1
instance = comp, \comb_3|u0|Add2~42 , comb_3|u0|Add2~42, test_interface, 1
instance = comp, \comb_3|u0|count_50~8 , comb_3|u0|count_50~8, test_interface, 1
instance = comp, \comb_3|u0|count_50[21] , comb_3|u0|count_50[21], test_interface, 1
instance = comp, \comb_3|u0|Add2~44 , comb_3|u0|Add2~44, test_interface, 1
instance = comp, \comb_3|u0|count_50~9 , comb_3|u0|count_50~9, test_interface, 1
instance = comp, \comb_3|u0|count_50[22] , comb_3|u0|count_50[22], test_interface, 1
instance = comp, \comb_3|u0|Add2~46 , comb_3|u0|Add2~46, test_interface, 1
instance = comp, \comb_3|u0|count_50~10 , comb_3|u0|count_50~10, test_interface, 1
instance = comp, \comb_3|u0|count_50[23] , comb_3|u0|count_50[23], test_interface, 1
instance = comp, \comb_3|u0|Add2~48 , comb_3|u0|Add2~48, test_interface, 1
instance = comp, \comb_3|u0|count_50[24] , comb_3|u0|count_50[24], test_interface, 1
instance = comp, \comb_3|u0|Add2~50 , comb_3|u0|Add2~50, test_interface, 1
instance = comp, \comb_3|u0|count_50~11 , comb_3|u0|count_50~11, test_interface, 1
instance = comp, \comb_3|u0|count_50[25] , comb_3|u0|count_50[25], test_interface, 1
instance = comp, \comb_3|u0|Add2~52 , comb_3|u0|Add2~52, test_interface, 1
instance = comp, \comb_3|u0|count_50[26] , comb_3|u0|count_50[26], test_interface, 1
instance = comp, \comb_3|u0|Equal1~7 , comb_3|u0|Equal1~7, test_interface, 1
instance = comp, \comb_3|u0|Equal1~5 , comb_3|u0|Equal1~5, test_interface, 1
instance = comp, \comb_3|u0|Equal1~6 , comb_3|u0|Equal1~6, test_interface, 1
instance = comp, \comb_3|u0|Equal1~0 , comb_3|u0|Equal1~0, test_interface, 1
instance = comp, \comb_3|u0|Equal1~3 , comb_3|u0|Equal1~3, test_interface, 1
instance = comp, \comb_3|u0|Equal1~2 , comb_3|u0|Equal1~2, test_interface, 1
instance = comp, \comb_3|u0|Equal1~1 , comb_3|u0|Equal1~1, test_interface, 1
instance = comp, \comb_3|u0|Equal1~4 , comb_3|u0|Equal1~4, test_interface, 1
instance = comp, \comb_3|u0|Equal1~8 , comb_3|u0|Equal1~8, test_interface, 1
instance = comp, \comb_3|u0|count_s[2]~12 , comb_3|u0|count_s[2]~12, test_interface, 1
instance = comp, \comb_3|u0|count_s[0] , comb_3|u0|count_s[0], test_interface, 1
instance = comp, \comb_3|u0|count_s[1]~13 , comb_3|u0|count_s[1]~13, test_interface, 1
instance = comp, \comb_3|u0|count_s[1]~feeder , comb_3|u0|count_s[1]~feeder, test_interface, 1
instance = comp, \comb_3|u0|Add0~2 , comb_3|u0|Add0~2, test_interface, 1
instance = comp, \comb_3|u0|count_s[1] , comb_3|u0|count_s[1], test_interface, 1
instance = comp, \comb_3|u0|count_s[2]~15 , comb_3|u0|count_s[2]~15, test_interface, 1
instance = comp, \comb_3|u0|count_s[2]~feeder , comb_3|u0|count_s[2]~feeder, test_interface, 1
instance = comp, \comb_3|u0|Add0~4 , comb_3|u0|Add0~4, test_interface, 1
instance = comp, \comb_3|u0|Equal2~0 , comb_3|u0|Equal2~0, test_interface, 1
instance = comp, \comb_3|u0|count_s~17 , comb_3|u0|count_s~17, test_interface, 1
instance = comp, \comb_3|u0|count_s[2] , comb_3|u0|count_s[2], test_interface, 1
instance = comp, \comb_3|u0|count_s[3]~18 , comb_3|u0|count_s[3]~18, test_interface, 1
instance = comp, \comb_3|u0|Add0~6 , comb_3|u0|Add0~6, test_interface, 1
instance = comp, \comb_3|u0|count_s[3] , comb_3|u0|count_s[3], test_interface, 1
instance = comp, \comb_3|u0|count_s[4]~20 , comb_3|u0|count_s[4]~20, test_interface, 1
instance = comp, \comb_3|u0|Add0~8 , comb_3|u0|Add0~8, test_interface, 1
instance = comp, \comb_3|u0|count_s[4] , comb_3|u0|count_s[4], test_interface, 1
instance = comp, \comb_3|u0|count_s[5]~22 , comb_3|u0|count_s[5]~22, test_interface, 1
instance = comp, \comb_3|u0|Add0~10 , comb_3|u0|Add0~10, test_interface, 1
instance = comp, \comb_3|u0|count_s[5] , comb_3|u0|count_s[5], test_interface, 1
instance = comp, \comb_3|u0|a1|out1[2]~2 , comb_3|u0|a1|out1[2]~2, test_interface, 1
instance = comp, \comb_3|u0|a1|out1[2]~3 , comb_3|u0|a1|out1[2]~3, test_interface, 1
instance = comp, \comb_3|u0|a1|out1[2]~11 , comb_3|u0|a1|out1[2]~11, test_interface, 1
instance = comp, \comb_3|u0|a1|out2[3]~4 , comb_3|u0|a1|out2[3]~4, test_interface, 1
instance = comp, \comb_3|u0|a1|out2[3]~4clkctrl , comb_3|u0|a1|out2[3]~4clkctrl, test_interface, 1
instance = comp, \comb_3|u0|a1|out1[2] , comb_3|u0|a1|out1[2], test_interface, 1
instance = comp, \comb_3|u0|a1|out1[3]~8 , comb_3|u0|a1|out1[3]~8, test_interface, 1
instance = comp, \comb_3|u0|a1|out1[3]~9 , comb_3|u0|a1|out1[3]~9, test_interface, 1
instance = comp, \comb_3|u0|a1|out1[3]~10 , comb_3|u0|a1|out1[3]~10, test_interface, 1
instance = comp, \comb_3|u0|a1|out1[3] , comb_3|u0|a1|out1[3], test_interface, 1
instance = comp, \comb_3|u0|a1|out1[1]~7 , comb_3|u0|a1|out1[1]~7, test_interface, 1
instance = comp, \comb_3|u0|a1|out1[1]~6 , comb_3|u0|a1|out1[1]~6, test_interface, 1
instance = comp, \comb_3|u0|a1|out1[1]~12 , comb_3|u0|a1|out1[1]~12, test_interface, 1
instance = comp, \comb_3|u0|a1|out1[1] , comb_3|u0|a1|out1[1], test_interface, 1
instance = comp, \comb_3|u0|a1|out1[0] , comb_3|u0|a1|out1[0], test_interface, 1
instance = comp, \comb_3|u0|u2|WideOr6~0 , comb_3|u0|u2|WideOr6~0, test_interface, 1
instance = comp, \comb_3|u0|u2|WideOr5~0 , comb_3|u0|u2|WideOr5~0, test_interface, 1
instance = comp, \comb_3|u0|u2|WideOr4~0 , comb_3|u0|u2|WideOr4~0, test_interface, 1
instance = comp, \comb_3|u0|u2|WideOr3~0 , comb_3|u0|u2|WideOr3~0, test_interface, 1
instance = comp, \comb_3|u0|u2|WideOr2~0 , comb_3|u0|u2|WideOr2~0, test_interface, 1
instance = comp, \comb_3|u0|u2|WideOr1~0 , comb_3|u0|u2|WideOr1~0, test_interface, 1
instance = comp, \comb_3|u0|u2|WideOr0~0 , comb_3|u0|u2|WideOr0~0, test_interface, 1
instance = comp, \comb_3|u0|a1|out2[1]~5 , comb_3|u0|a1|out2[1]~5, test_interface, 1
instance = comp, \comb_3|u0|a1|out2[1] , comb_3|u0|a1|out2[1], test_interface, 1
instance = comp, \comb_3|u0|a1|out2[0]~2 , comb_3|u0|a1|out2[0]~2, test_interface, 1
instance = comp, \comb_3|u0|a1|out2[0]~3 , comb_3|u0|a1|out2[0]~3, test_interface, 1
instance = comp, \comb_3|u0|a1|out2[0]~6 , comb_3|u0|a1|out2[0]~6, test_interface, 1
instance = comp, \comb_3|u0|a1|out2[0] , comb_3|u0|a1|out2[0], test_interface, 1
instance = comp, \comb_3|u0|a1|comb~0 , comb_3|u0|a1|comb~0, test_interface, 1
instance = comp, \comb_3|u0|a1|LessThan3~0 , comb_3|u0|a1|LessThan3~0, test_interface, 1
instance = comp, \comb_3|u0|a1|out2[2] , comb_3|u0|a1|out2[2], test_interface, 1
instance = comp, \comb_3|u0|u1|WideOr6~0 , comb_3|u0|u1|WideOr6~0, test_interface, 1
instance = comp, \comb_3|u0|u1|WideOr5~0 , comb_3|u0|u1|WideOr5~0, test_interface, 1
instance = comp, \comb_3|u0|u1|Decoder0~0 , comb_3|u0|u1|Decoder0~0, test_interface, 1
instance = comp, \comb_3|u0|u1|WideOr3~0 , comb_3|u0|u1|WideOr3~0, test_interface, 1
instance = comp, \comb_3|u0|u1|WideOr2~0 , comb_3|u0|u1|WideOr2~0, test_interface, 1
instance = comp, \comb_3|u0|u1|WideOr1~0 , comb_3|u0|u1|WideOr1~0, test_interface, 1
instance = comp, \comb_3|u0|u1|WideOr0~0 , comb_3|u0|u1|WideOr0~0, test_interface, 1
instance = comp, \comb_3|u1|esub~0 , comb_3|u1|esub~0, test_interface, 1
instance = comp, \comb_3|u3|Decoder0~3 , comb_3|u3|Decoder0~3, test_interface, 1
instance = comp, \comb_3|sm , comb_3|sm, test_interface, 1
instance = comp, \comb_3|u1|eadd~0 , comb_3|u1|eadd~0, test_interface, 1
instance = comp, \comb_3|u1|esub , comb_3|u1|esub, test_interface, 1
instance = comp, \comb_3|u1|count_s[3]~0 , comb_3|u1|count_s[3]~0, test_interface, 1
instance = comp, \comb_3|u1|Add1~0 , comb_3|u1|Add1~0, test_interface, 1
instance = comp, \comb_3|u1|Add0~0 , comb_3|u1|Add0~0, test_interface, 1
instance = comp, \comb_3|u1|Add1~2 , comb_3|u1|Add1~2, test_interface, 1
instance = comp, \comb_3|u0|LessThan0~0 , comb_3|u0|LessThan0~0, test_interface, 1
instance = comp, \comb_3|u0|enable~3 , comb_3|u0|enable~3, test_interface, 1
instance = comp, \comb_3|u0|enable~2 , comb_3|u0|enable~2, test_interface, 1
instance = comp, \comb_3|u0|enable , comb_3|u0|enable, test_interface, 1
instance = comp, \comb_3|u0|S_counter_over , comb_3|u0|S_counter_over, test_interface, 1
instance = comp, \comb_3|u1|eadd~1 , comb_3|u1|eadd~1, test_interface, 1
instance = comp, \comb_3|u1|eadd , comb_3|u1|eadd, test_interface, 1
instance = comp, \comb_3|u1|count_s[3]~1 , comb_3|u1|count_s[3]~1, test_interface, 1
instance = comp, \comb_3|u1|count_s[3]~2 , comb_3|u1|count_s[3]~2, test_interface, 1
instance = comp, \comb_3|u1|en1 , comb_3|u1|en1, test_interface, 1
instance = comp, \comb_3|u1|enable~0 , comb_3|u1|enable~0, test_interface, 1
instance = comp, \comb_3|u1|count_s[3]~3 , comb_3|u1|count_s[3]~3, test_interface, 1
instance = comp, \comb_3|u1|count_s[0] , comb_3|u1|count_s[0], test_interface, 1
instance = comp, \comb_3|u1|Add0~2 , comb_3|u1|Add0~2, test_interface, 1
instance = comp, \comb_3|u1|Add1~3 , comb_3|u1|Add1~3, test_interface, 1
instance = comp, \comb_3|u1|Add1~13 , comb_3|u1|Add1~13, test_interface, 1
instance = comp, \comb_3|u1|count_s[1] , comb_3|u1|count_s[1], test_interface, 1
instance = comp, \comb_3|u1|Add1~5 , comb_3|u1|Add1~5, test_interface, 1
instance = comp, \comb_3|u1|Add0~4 , comb_3|u1|Add0~4, test_interface, 1
instance = comp, \comb_3|u1|Equal1~0 , comb_3|u1|Equal1~0, test_interface, 1
instance = comp, \comb_3|u1|count_s~6 , comb_3|u1|count_s~6, test_interface, 1
instance = comp, \comb_3|u1|count_s~7 , comb_3|u1|count_s~7, test_interface, 1
instance = comp, \comb_3|u1|count_s[2] , comb_3|u1|count_s[2], test_interface, 1
instance = comp, \comb_3|u1|Add0~6 , comb_3|u1|Add0~6, test_interface, 1
instance = comp, \comb_3|u1|Add0~8 , comb_3|u1|Add0~8, test_interface, 1
instance = comp, \comb_3|u1|Add0~10 , comb_3|u1|Add0~10, test_interface, 1
instance = comp, \comb_3|u1|Add1~9 , comb_3|u1|Add1~9, test_interface, 1
instance = comp, \comb_3|u1|Add1~11 , comb_3|u1|Add1~11, test_interface, 1
instance = comp, \comb_3|u1|count_s~5 , comb_3|u1|count_s~5, test_interface, 1
instance = comp, \comb_3|u1|count_s[5] , comb_3|u1|count_s[5], test_interface, 1
instance = comp, \comb_3|u1|a1|out1[2]~8 , comb_3|u1|a1|out1[2]~8, test_interface, 1
instance = comp, \comb_3|u1|count_s[3]~4 , comb_3|u1|count_s[3]~4, test_interface, 1
instance = comp, \comb_3|u1|Add1~7 , comb_3|u1|Add1~7, test_interface, 1
instance = comp, \comb_3|u1|count_s~8 , comb_3|u1|count_s~8, test_interface, 1
instance = comp, \comb_3|u1|count_s[3] , comb_3|u1|count_s[3], test_interface, 1
instance = comp, \comb_3|u1|count_s~9 , comb_3|u1|count_s~9, test_interface, 1
instance = comp, \comb_3|u1|count_s[4] , comb_3|u1|count_s[4], test_interface, 1
instance = comp, \comb_3|u1|a1|out1[3]~9 , comb_3|u1|a1|out1[3]~9, test_interface, 1
instance = comp, \comb_3|u1|a1|out1[3]~10 , comb_3|u1|a1|out1[3]~10, test_interface, 1
instance = comp, \comb_3|u1|a1|out1[3]~11 , comb_3|u1|a1|out1[3]~11, test_interface, 1
instance = comp, \comb_3|u1|a1|out2[3]~4 , comb_3|u1|a1|out2[3]~4, test_interface, 1
instance = comp, \comb_3|u1|a1|out2[3]~4clkctrl , comb_3|u1|a1|out2[3]~4clkctrl, test_interface, 1
instance = comp, \comb_3|u1|a1|out1[3] , comb_3|u1|a1|out1[3], test_interface, 1
instance = comp, \comb_3|u1|a1|out1[2]~3 , comb_3|u1|a1|out1[2]~3, test_interface, 1
instance = comp, \comb_3|u1|a1|out1[2]~2 , comb_3|u1|a1|out1[2]~2, test_interface, 1
instance = comp, \comb_3|u1|a1|out1[2]~12 , comb_3|u1|a1|out1[2]~12, test_interface, 1
instance = comp, \comb_3|u1|a1|out1[2] , comb_3|u1|a1|out1[2], test_interface, 1
instance = comp, \comb_3|u1|a1|out1[0] , comb_3|u1|a1|out1[0], test_interface, 1
instance = comp, \comb_3|u1|a1|out1[1]~6 , comb_3|u1|a1|out1[1]~6, test_interface, 1
instance = comp, \comb_3|u1|a1|out1[1]~7 , comb_3|u1|a1|out1[1]~7, test_interface, 1
instance = comp, \comb_3|u1|a1|out1[1]~13 , comb_3|u1|a1|out1[1]~13, test_interface, 1
instance = comp, \comb_3|u1|a1|out1[1] , comb_3|u1|a1|out1[1], test_interface, 1
instance = comp, \comb_3|u1|u2|WideOr6~0 , comb_3|u1|u2|WideOr6~0, test_interface, 1
instance = comp, \comb_3|u1|u2|WideOr5~0 , comb_3|u1|u2|WideOr5~0, test_interface, 1
instance = comp, \comb_3|u1|u2|WideOr4~0 , comb_3|u1|u2|WideOr4~0, test_interface, 1
instance = comp, \comb_3|u1|u2|WideOr3~0 , comb_3|u1|u2|WideOr3~0, test_interface, 1
instance = comp, \comb_3|u1|u2|WideOr2~0 , comb_3|u1|u2|WideOr2~0, test_interface, 1
instance = comp, \comb_3|u1|u2|WideOr1~0 , comb_3|u1|u2|WideOr1~0, test_interface, 1
instance = comp, \comb_3|u1|u2|WideOr0~0 , comb_3|u1|u2|WideOr0~0, test_interface, 1
instance = comp, \comb_3|u1|a1|out2[3]~5 , comb_3|u1|a1|out2[3]~5, test_interface, 1
instance = comp, \comb_3|u1|a1|LessThan3~0 , comb_3|u1|a1|LessThan3~0, test_interface, 1
instance = comp, \comb_3|u1|a1|out2[2] , comb_3|u1|a1|out2[2], test_interface, 1
instance = comp, \comb_3|u1|a1|out2[0]~2 , comb_3|u1|a1|out2[0]~2, test_interface, 1
instance = comp, \comb_3|u1|a1|out2[0]~3 , comb_3|u1|a1|out2[0]~3, test_interface, 1
instance = comp, \comb_3|u1|a1|out2[0]~7 , comb_3|u1|a1|out2[0]~7, test_interface, 1
instance = comp, \comb_3|u1|a1|out2[0] , comb_3|u1|a1|out2[0], test_interface, 1
instance = comp, \comb_3|u1|a1|out2[1]~6 , comb_3|u1|a1|out2[1]~6, test_interface, 1
instance = comp, \comb_3|u1|a1|out2[1] , comb_3|u1|a1|out2[1], test_interface, 1
instance = comp, \comb_3|u1|u1|WideOr6~0 , comb_3|u1|u1|WideOr6~0, test_interface, 1
instance = comp, \comb_3|u1|u1|WideOr5~0 , comb_3|u1|u1|WideOr5~0, test_interface, 1
instance = comp, \comb_3|u1|u1|Decoder0~0 , comb_3|u1|u1|Decoder0~0, test_interface, 1
instance = comp, \comb_3|u1|u1|WideOr3~0 , comb_3|u1|u1|WideOr3~0, test_interface, 1
instance = comp, \comb_3|u1|u1|WideOr2~0 , comb_3|u1|u1|WideOr2~0, test_interface, 1
instance = comp, \comb_3|u1|u1|WideOr1~0 , comb_3|u1|u1|WideOr1~0, test_interface, 1
instance = comp, \comb_3|u1|u1|WideOr0~0 , comb_3|u1|u1|WideOr0~0, test_interface, 1
instance = comp, \comb_3|u2|esub~0 , comb_3|u2|esub~0, test_interface, 1
instance = comp, \comb_3|Add0~0 , comb_3|Add0~0, test_interface, 1
instance = comp, \comb_3|sh , comb_3|sh, test_interface, 1
instance = comp, \comb_3|u2|eadd~0 , comb_3|u2|eadd~0, test_interface, 1
instance = comp, \comb_3|u2|esub , comb_3|u2|esub, test_interface, 1
instance = comp, \comb_3|u2|count_s[0]~4 , comb_3|u2|count_s[0]~4, test_interface, 1
instance = comp, \comb_3|u2|Add0~0 , comb_3|u2|Add0~0, test_interface, 1
instance = comp, \comb_3|u2|Add1~0 , comb_3|u2|Add1~0, test_interface, 1
instance = comp, \comb_3|u2|Add1~2 , comb_3|u2|Add1~2, test_interface, 1
instance = comp, \comb_3|u1|enable~1 , comb_3|u1|enable~1, test_interface, 1
instance = comp, \comb_3|u1|enable , comb_3|u1|enable, test_interface, 1
instance = comp, \comb_3|u1|S_counter_over , comb_3|u1|S_counter_over, test_interface, 1
instance = comp, \comb_3|u2|en1 , comb_3|u2|en1, test_interface, 1
instance = comp, \comb_3|u2|count_s[0]~5 , comb_3|u2|count_s[0]~5, test_interface, 1
instance = comp, \comb_3|u2|eadd~1 , comb_3|u2|eadd~1, test_interface, 1
instance = comp, \comb_3|u2|eadd , comb_3|u2|eadd, test_interface, 1
instance = comp, \comb_3|u2|count_s[0]~6 , comb_3|u2|count_s[0]~6, test_interface, 1
instance = comp, \comb_3|u2|count_s[0]~12 , comb_3|u2|count_s[0]~12, test_interface, 1
instance = comp, \comb_3|u2|count_s[0]~7 , comb_3|u2|count_s[0]~7, test_interface, 1
instance = comp, \comb_3|u2|count_s[0] , comb_3|u2|count_s[0], test_interface, 1
instance = comp, \comb_3|u2|Add1~4 , comb_3|u2|Add1~4, test_interface, 1
instance = comp, \comb_3|u2|Add0~2 , comb_3|u2|Add0~2, test_interface, 1
instance = comp, \comb_3|u2|Add1~16 , comb_3|u2|Add1~16, test_interface, 1
instance = comp, \comb_3|u2|count_s[1] , comb_3|u2|count_s[1], test_interface, 1
instance = comp, \comb_3|u2|Add1~6 , comb_3|u2|Add1~6, test_interface, 1
instance = comp, \comb_3|u2|Add0~4 , comb_3|u2|Add0~4, test_interface, 1
instance = comp, \comb_3|u2|Add1~15 , comb_3|u2|Add1~15, test_interface, 1
instance = comp, \comb_3|u2|count_s[2] , comb_3|u2|count_s[2], test_interface, 1
instance = comp, \comb_3|u2|Add0~6 , comb_3|u2|Add0~6, test_interface, 1
instance = comp, \comb_3|u2|Add1~8 , comb_3|u2|Add1~8, test_interface, 1
instance = comp, \comb_3|u2|count_s~13 , comb_3|u2|count_s~13, test_interface, 1
instance = comp, \comb_3|u2|Add1~10 , comb_3|u2|Add1~10, test_interface, 1
instance = comp, \comb_3|u2|Add0~8 , comb_3|u2|Add0~8, test_interface, 1
instance = comp, \comb_3|u2|count_s~11 , comb_3|u2|count_s~11, test_interface, 1
instance = comp, \comb_3|u2|count_s[4] , comb_3|u2|count_s[4], test_interface, 1
instance = comp, \comb_3|u2|count_s[0]~8 , comb_3|u2|count_s[0]~8, test_interface, 1
instance = comp, \comb_3|u2|count_s[0]~9 , comb_3|u2|count_s[0]~9, test_interface, 1
instance = comp, \comb_3|u2|count_s~10 , comb_3|u2|count_s~10, test_interface, 1
instance = comp, \comb_3|u2|count_s[3] , comb_3|u2|count_s[3], test_interface, 1
instance = comp, \comb_3|u2|Equal0~0 , comb_3|u2|Equal0~0, test_interface, 1
instance = comp, \comb_3|u2|Add1~3 , comb_3|u2|Add1~3, test_interface, 1
instance = comp, \comb_3|u2|Add0~10 , comb_3|u2|Add0~10, test_interface, 1
instance = comp, \comb_3|u2|Add1~12 , comb_3|u2|Add1~12, test_interface, 1
instance = comp, \comb_3|u2|Add1~14 , comb_3|u2|Add1~14, test_interface, 1
instance = comp, \comb_3|u2|count_s[5] , comb_3|u2|count_s[5], test_interface, 1
instance = comp, \comb_3|u2|a1|out1[3]~15 , comb_3|u2|a1|out1[3]~15, test_interface, 1
instance = comp, \comb_3|u2|a1|out1[3]~14 , comb_3|u2|a1|out1[3]~14, test_interface, 1
instance = comp, \comb_3|u2|a1|out1[3]~16 , comb_3|u2|a1|out1[3]~16, test_interface, 1
instance = comp, \comb_3|u2|a1|out2[3]~4 , comb_3|u2|a1|out2[3]~4, test_interface, 1
instance = comp, \comb_3|u2|a1|out2[3]~4clkctrl , comb_3|u2|a1|out2[3]~4clkctrl, test_interface, 1
instance = comp, \comb_3|u2|a1|out1[3] , comb_3|u2|a1|out1[3], test_interface, 1
instance = comp, \comb_3|u2|a1|out1[2]~8 , comb_3|u2|a1|out1[2]~8, test_interface, 1
instance = comp, \comb_3|u2|a1|out1[2]~9 , comb_3|u2|a1|out1[2]~9, test_interface, 1
instance = comp, \comb_3|u2|a1|out1[2]~17 , comb_3|u2|a1|out1[2]~17, test_interface, 1
instance = comp, \comb_3|u2|a1|out1[2] , comb_3|u2|a1|out1[2], test_interface, 1
instance = comp, \comb_3|u2|a1|out1[0] , comb_3|u2|a1|out1[0], test_interface, 1
instance = comp, \comb_3|u2|a1|out1[1]~12 , comb_3|u2|a1|out1[1]~12, test_interface, 1
instance = comp, \comb_3|u2|a1|out1[1]~13 , comb_3|u2|a1|out1[1]~13, test_interface, 1
instance = comp, \comb_3|u2|a1|out1[1]~18 , comb_3|u2|a1|out1[1]~18, test_interface, 1
instance = comp, \comb_3|u2|a1|out1[1] , comb_3|u2|a1|out1[1], test_interface, 1
instance = comp, \comb_3|u2|u2|WideOr6~0 , comb_3|u2|u2|WideOr6~0, test_interface, 1
instance = comp, \comb_3|u2|u2|WideOr5~0 , comb_3|u2|u2|WideOr5~0, test_interface, 1
instance = comp, \comb_3|u2|u2|WideOr4~0 , comb_3|u2|u2|WideOr4~0, test_interface, 1
instance = comp, \comb_3|u2|u2|WideOr3~0 , comb_3|u2|u2|WideOr3~0, test_interface, 1
instance = comp, \comb_3|u2|u2|WideOr2~0 , comb_3|u2|u2|WideOr2~0, test_interface, 1
instance = comp, \comb_3|u2|u2|WideOr1~0 , comb_3|u2|u2|WideOr1~0, test_interface, 1
instance = comp, \comb_3|u2|u2|WideOr0~0 , comb_3|u2|u2|WideOr0~0, test_interface, 1
instance = comp, \comb_3|u2|a1|out2[1]~6 , comb_3|u2|a1|out2[1]~6, test_interface, 1
instance = comp, \comb_3|u2|a1|out2[1] , comb_3|u2|a1|out2[1], test_interface, 1
instance = comp, \comb_3|u2|a1|out2[0]~3 , comb_3|u2|a1|out2[0]~3, test_interface, 1
instance = comp, \comb_3|u2|a1|out2[0]~2 , comb_3|u2|a1|out2[0]~2, test_interface, 1
instance = comp, \comb_3|u2|a1|out2[0]~7 , comb_3|u2|a1|out2[0]~7, test_interface, 1
instance = comp, \comb_3|u2|a1|out2[0] , comb_3|u2|a1|out2[0], test_interface, 1
instance = comp, \comb_3|u2|a1|LessThan3~0 , comb_3|u2|a1|LessThan3~0, test_interface, 1
instance = comp, \comb_3|u2|a1|out2[3]~5 , comb_3|u2|a1|out2[3]~5, test_interface, 1
instance = comp, \comb_3|u2|a1|out2[2] , comb_3|u2|a1|out2[2], test_interface, 1
instance = comp, \comb_3|u2|u1|WideOr6~0 , comb_3|u2|u1|WideOr6~0, test_interface, 1
instance = comp, \comb_3|u2|u1|WideOr5~0 , comb_3|u2|u1|WideOr5~0, test_interface, 1
instance = comp, \comb_3|u2|u1|Decoder0~0 , comb_3|u2|u1|Decoder0~0, test_interface, 1
instance = comp, \comb_3|u2|u1|WideOr3~0 , comb_3|u2|u1|WideOr3~0, test_interface, 1
instance = comp, \comb_3|u2|u1|WideOr2~0 , comb_3|u2|u1|WideOr2~0, test_interface, 1
instance = comp, \comb_3|u2|u1|WideOr1~0 , comb_3|u2|u1|WideOr1~0, test_interface, 1
instance = comp, \comb_3|u2|u1|WideOr0~0 , comb_3|u2|u1|WideOr0~0, test_interface, 1
instance = comp, \SW[0]~input , SW[0]~input, test_interface, 1
instance = comp, \SW[1]~input , SW[1]~input, test_interface, 1
instance = comp, \SW[2]~input , SW[2]~input, test_interface, 1
instance = comp, \SW[3]~input , SW[3]~input, test_interface, 1
instance = comp, \SW[4]~input , SW[4]~input, test_interface, 1
instance = comp, \SW[5]~input , SW[5]~input, test_interface, 1
instance = comp, \SW[6]~input , SW[6]~input, test_interface, 1
instance = comp, \SW[7]~input , SW[7]~input, test_interface, 1
instance = comp, \SW[8]~input , SW[8]~input, test_interface, 1
instance = comp, \SW[9]~input , SW[9]~input, test_interface, 1
instance = comp, \SW[10]~input , SW[10]~input, test_interface, 1
instance = comp, \SW[11]~input , SW[11]~input, test_interface, 1
instance = comp, \SW[12]~input , SW[12]~input, test_interface, 1
instance = comp, \SW[13]~input , SW[13]~input, test_interface, 1
instance = comp, \SW[14]~input , SW[14]~input, test_interface, 1
instance = comp, \SW[15]~input , SW[15]~input, test_interface, 1
instance = comp, \SW[16]~input , SW[16]~input, test_interface, 1
instance = comp, \SW[17]~input , SW[17]~input, test_interface, 1
instance = comp, \KEY[3]~input , KEY[3]~input, test_interface, 1
design_name = hard_block
instance = comp, \~ALTERA_DATA0~~ibuf , ~ALTERA_DATA0~~ibuf, hard_block, 1
instance = comp, \~ALTERA_ASDO_DATA1~~ibuf , ~ALTERA_ASDO_DATA1~~ibuf, hard_block, 1
instance = comp, \~ALTERA_NCSO~~ibuf , ~ALTERA_NCSO~~ibuf, hard_block, 1
